{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","fetchCoinHistory","coinId","endDate","Math","floor","Date","now","startDate","Chart","useQuery","refetchInterval","isLoading","data","type","series","map","price","parse","time_close","open","toFixed","high","low","close","options","chart","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","categories","labels","style","colors","plotOptions","candlestick","downward","upward","PriceTable","styled","div","props","theme","bgColor","boxColor","accentColor","textColor","Price","slice","reverse","Title","h1","Loader","span","Container","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","BackToHome","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","name","to","pathname","process","rank","symbol","quotes","USD","description","total_supply","max_supply","path","CoinsList","ul","li","Img","img","Coins","coin","id","src","toLowerCase","Router","DarkTheme","LightTheme","GlobalStyle","createGlobalStyle","ToggleThemeDiv","ToggleTheme","toggleTheme","onClick","App","useState","setTheme","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"8NAAMA,EAAQ,iCAEP,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAsBG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAezD,SAASC,EAAiBC,GAC/B,IAAMC,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAC5B,OAAON,MAAM,GAAD,OACPF,EADO,kBACWO,EADX,mCAC4CM,EAD5C,gBAC6DL,IACvEL,MAAK,SAACC,GAAD,OAAcA,EAASC,U,4BCqEjBS,I,EAAAA,EA1Ef,YAAwC,IAAvBP,EAAsB,EAAtBA,OACf,EAA4BQ,mBAC1B,CAAC,QAASR,IACV,kBAAMD,EAAiBC,KACvB,CACES,gBAAiB,MAJbC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAYnB,OACE,8BACGD,EACC,mBAEA,cAAC,IAAD,CACEE,KAAK,cACLC,OAAQ,CACN,CACEF,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMG,KAAI,SAACC,GACf,MAAO,CACLX,KAAKY,MAAMD,EAAME,YACjBF,EAAMG,KAAKC,QAAQ,GACnBJ,EAAMK,KAAKD,QAAQ,GACnBJ,EAAMM,IAAIF,QAAQ,GAClBJ,EAAMO,MAAMH,QAAQ,SAK5BI,QAAS,CACPC,MAAO,CACLZ,KAAM,cACNa,OAAQ,IACRC,MAAO,IACPC,QAAS,CACPC,MAAM,GAERC,WAAY,eAEdC,OAAQ,CACNC,MAAO,SACPL,MAAO,GAETM,MAAO,CACLJ,MAAM,GAERK,MAAO,CACLrB,KAAM,WACNsB,WAAU,OAAEvB,QAAF,IAAEA,OAAF,EAAEA,EAAMG,KAAI,SAACC,GAAD,OAAWA,EAAME,cACvCkB,OAAQ,CACNC,MAAO,CACLC,OAAQ,aAIdC,YAAa,CACXC,YAAa,CACXF,OAAQ,CACNG,SAAU,UACVC,OAAQ,mBC7EpBC,EAAaC,IAAOC,IAAV,oZAGQ,SAACC,GAAD,OAAWA,EAAMC,MAAMC,WACvB,SAACF,GAAD,OAAWA,EAAMC,MAAME,YAGrB,SAACH,GAAD,OAAWA,EAAMC,MAAMC,WAIhC,SAACF,GAAD,OAAWA,EAAMC,MAAMG,eASrB,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,aAkE3BC,I,oBAAAA,EA7Cf,YAAwC,IAAvBnD,EAAsB,EAAtBA,OACf,EAA4BQ,mBAC1B,CAAC,gBAAiBR,IAClB,kBAAMD,EAAiBC,KACvB,CACES,gBAAiB,MAJbC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAOnB,OACE,8BACGD,EACC,mBAEA,cAACgC,EAAD,UACE,kCACE,kCACE,sCACA,sCACA,qCACA,0CAEF,uCACG/B,QADH,IACGA,OADH,EACGA,EACGyC,MAAM,GACPC,UACAvC,KAAI,SAACC,GACJ,OACE,+BACE,6BAAKA,EAAME,WAAWmC,MAAM,EAAG,MAC/B,mCAAMrC,EAAMK,KAAKD,QAAQ,MACzB,mCAAMJ,EAAMM,IAAIF,QAAQ,MACxB,mCAAMJ,EAAMO,MAAMH,QAAQ,sBC7D1CmC,EAAQX,IAAOY,GAAV,+DAEA,SAACV,GAAD,OAAWA,EAAMC,MAAMG,eAG5BO,EAASb,IAAOc,KAAV,sEAKNC,EAAYf,IAAOC,IAAV,0FAMTe,EAAShB,IAAOiB,OAAV,mHAONC,EAAWlB,IAAOC,IAAV,0JAGQ,SAACC,GAAD,OAAWA,EAAMC,MAAME,YAIvCc,EAAenB,IAAOC,IAAV,iPAYZmB,EAAcpB,IAAOqB,EAAV,iDAIXC,EAAOtB,IAAOC,IAAV,2HAOJsB,EAAMvB,IAAOc,KAAV,mPAKa,SAACZ,GAAD,OAAWA,EAAMC,MAAME,YAElC,SAACH,GAAD,OACPA,EAAMsB,SAAWtB,EAAMC,MAAMG,YAAcJ,EAAMC,MAAMI,aAOrDkB,EAAazB,IAAOC,IAAV,oDA8JDyB,I,cAAAA,EA9Ff,WACE,IAAQrE,EAAWsE,cAAXtE,OACAuE,EAAUC,cAAVD,MACFE,EAAaC,YAAc,kBAC3BC,EAAaD,YAAc,kBACjC,EAAmDlE,mBACjD,CAAC,OAAQR,IACT,kBHpJG,SAAuBA,GAC5B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAsBO,IAAUJ,MAAK,SAACC,GAAD,OAC/CA,EAASC,UGkJH8E,CAAc5E,MAFH6E,EAAnB,EAAQnE,UAA8BoE,EAAtC,EAAgCnE,KAIhC,EAAyDH,mBACvD,CAAC,UAAWR,IACZ,kBHlJG,SAA0BA,GAC/B,OAAOL,MAAM,GAAD,OAAIF,EAAJ,oBAAwBO,IAAUJ,MAAK,SAACC,GAAD,OACjDA,EAASC,UGgJHiF,CAAiB/E,KACvB,CACES,gBAAiB,MAJFuE,EAAnB,EAAQtE,UAAiCuE,EAAzC,EAAmCtE,KAO7BuE,EAAUL,GAAeG,EAC/B,OACE,eAACtB,EAAD,WACE,cAACyB,EAAA,EAAD,UACE,iCACQ,OAALZ,QAAK,IAALA,OAAA,EAAAA,EAAOa,MAAOb,EAAMa,KAAOF,EAAU,aAAH,OAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUM,SAGnE,cAACzB,EAAD,UACE,cAACL,EAAD,WACQ,OAALiB,QAAK,IAALA,OAAA,EAAAA,EAAOa,MAAOb,EAAMa,KAAOF,EAAU,aAAH,OAAkBJ,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAUM,SAGnE,cAAChB,EAAD,UACE,cAAC,IAAD,CACEiB,GAAI,CACFC,SAAS,GAAD,OAAKC,qBAAL,MAFZ,6BAQDL,EACC,cAAC1B,EAAD,yBAEA,qCACE,eAACK,EAAD,WACE,eAACC,EAAD,WACE,yCACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAUU,UAEnB,eAAC1B,EAAD,WACE,2CACA,4CAAQgB,QAAR,IAAQA,OAAR,EAAQA,EAAUW,aAEpB,eAAC3B,EAAD,WACE,0CACA,4CAAQmB,QAAR,IAAQA,OAAR,EAAQA,EAAaS,OAAOC,IAAI5E,MAAMI,QAAQ,YAGlD,cAAC4C,EAAD,iBAAce,QAAd,IAAcA,OAAd,EAAcA,EAAUc,cACxB,eAAC/B,EAAD,WACE,eAACC,EAAD,WACE,iDACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAaY,kBAEtB,eAAC/B,EAAD,WACE,+CACA,sCAAOmB,QAAP,IAAOA,OAAP,EAAOA,EAAaa,mBAIxB,eAAC7B,EAAD,WACE,cAACC,EAAD,CAAKC,SAAyB,OAAfQ,EAAf,SACE,cAAC,IAAD,CAAMU,GAAE,UAAKE,qBAAL,YAA+BvF,EAA/B,UAAR,qBAIF,cAACkE,EAAD,CAAKC,SAAyB,OAAfM,EAAf,SACE,cAAC,IAAD,CAAMY,GAAE,UAAKE,qBAAL,YAA+BvF,EAA/B,UAAR,wBAMJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO+F,KAAI,UAAKR,qBAAL,kBAAX,SACE,cAAC,EAAD,CAAOvF,OAAQA,MAEjB,cAAC,IAAD,CAAO+F,KAAI,UAAKR,qBAAL,kBAAX,SACE,cAAC,EAAD,CAAOvF,OAAQA,gBCnOvB0D,EAAYf,IAAOC,IAAV,0FAMTe,EAAShB,IAAOiB,OAAV,mHAONoC,GAAYrD,IAAOsD,GAAV,0BAET5B,GAAO1B,IAAOuD,GAAV,6RACY,SAACrD,GAAD,OAAWA,EAAMC,MAAME,YAClC,SAACH,GAAD,OAAWA,EAAMC,MAAMI,aAWnB,SAACL,GAAD,OAAWA,EAAMC,MAAMG,eAKhCK,GAAQX,IAAOY,GAAV,+DAEA,SAACV,GAAD,OAAWA,EAAMC,MAAMG,eAG5BO,GAASb,IAAOc,KAAV,sEAKN0C,GAAMxD,IAAOyD,IAAV,oFAkDMC,OAlCf,WACE,MAA4B7F,mBAAkB,WAAYd,GAAlDgB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KACnB,OACE,eAAC,EAAD,WACE,cAACwE,EAAA,EAAD,UACE,mDAEF,cAAC,EAAD,UACE,cAAC,GAAD,6BAEDzE,EACC,cAAC,GAAD,yBAEA,cAACsF,GAAD,iBACGrF,QADH,IACGA,OADH,EACGA,EAAMyC,MAAM,EAAG,KAAKtC,KAAI,SAACwF,GAAD,OACvB,cAAC,GAAD,UACE,eAAC,IAAD,CACEjB,GAAI,CACFC,SAAS,GAAD,OAAKC,qBAAL,YAA+Be,EAAKC,IAC5ChC,MAAO,CAAEa,KAAMkB,EAAKlB,OAHxB,UAME,cAACe,GAAD,CACEK,IAAG,qDAAgDF,EAAKb,OAAOgB,iBAEhEH,EAAKlB,KATR,cADSkB,EAAKC,aC9DbG,I,MAAAA,GAdf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOX,KAAI,UAAKR,qBAAL,YAAX,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOQ,KAAI,UAAKR,qBAAL,KAAX,SACE,cAAC,GAAD,Y,SCVGoB,GAA0B,CACrC5D,QAAS,UACTG,UAAW,QACXD,YAAa,UACbD,SAAU,mBAGC4D,GAA2B,CACtC7D,QAAS,UACTG,UAAW,UACXD,YAAa,UACbD,SAAU,SCPN6D,GAAcC,YAAH,kzDAuDI,SAACjE,GAAD,OAAWA,EAAMC,MAAMC,WAClC,SAACF,GAAD,OAAWA,EAAMC,MAAMI,aAuBX,SAACL,GAAD,OAAWA,EAAMC,MAAMC,WACnC,SAACF,GAAD,OAAWA,EAAMC,MAAMI,aAI3B6D,GAAiBpE,IAAOC,IAAV,yEASpB,SAASoE,GAAT,GAAyD,IAAlCC,EAAiC,EAAjCA,YACrB,OACE,cAACF,GAAD,UACE,wBAAQG,QAASD,EAAjB,4BA2BSE,OAtBf,WACE,MAA0BC,mBAAS,cAAnC,mBAAOtE,EAAP,KAAcuE,EAAd,KASA,OACE,mCACE,eAAC,IAAD,CAAevE,MAAiB,eAAVA,EAAyB8D,GAAaD,GAA5D,UACE,cAACE,GAAD,IACA,cAACG,GAAD,CAAaC,YAZC,WAEhBI,EADY,eAAVvE,EACO,YAEA,iBASP,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBwE,eAAe,UCtHrCC,GAAc,IAAIC,cAExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,GAAD,QAGJM,SAASC,eAAe,W","file":"static/js/main.cc7a6d02.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport Price from \"./Price\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  interface ISeries {\n    data: [string[], [number[], number[], number[], number[]]];\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => {\n                return [\n                  Date.parse(price.time_close),\n                  price.open.toFixed(2),\n                  price.high.toFixed(2),\n                  price.low.toFixed(2),\n                  price.close.toFixed(2),\n                ];\n              }),\n            },\n          ]}\n          options={{\n            chart: {\n              type: \"candlestick\",\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 1,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n              labels: {\n                style: {\n                  colors: \"#9c88ff\",\n                },\n              },\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  downward: \"#3C90EB\",\n                  upward: \"#DF7D46\",\n                },\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n\n// <ApexChart\n//   type=\"line\"\n//   series={[\n//     {\n//       name: \"Price\",\n//       data: data?.map((price) => price.close),\n//     },\n//   ]}\n//   options={{\n//     theme: {\n//       mode: \"dark\",\n//     },\n//     chart: {\n//       height: 300,\n//       width: 500,\n//       toolbar: {\n//         show: false,\n//       },\n//       background: \"transparent\",\n//     },\n//     grid: { show: false },\n//     stroke: {\n//       curve: \"smooth\",\n//       width: 4,\n//     },\n//     yaxis: {\n//       show: false,\n//     },\n//     xaxis: {\n//       axisBorder: { show: false },\n//       axisTicks: { show: false },\n//       labels: { show: false },\n//       type: \"datetime\",\n//       categories: data?.map((price) => price.time_close),\n//     },\n//     fill: {\n//       type: \"gradient\",\n//       gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n//     },\n//     colors: [\"#0fbcf9\"],\n//     tooltip: {\n//       y: {\n//         formatter: (value) => `$${value.toFixed(2)}`,\n//       },\n//     },\n//   }}\n// />\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport styled from \"styled-components\";\n\nconst PriceTable = styled.div`\n  table {\n    width: 100%;\n    border: 3px solid ${(props) => props.theme.bgColor};\n    background-color: ${(props) => props.theme.boxColor};\n    th,\n    td {\n      border: 3px solid ${(props) => props.theme.bgColor};\n    }\n    thead {\n      th {\n        color: ${(props) => props.theme.accentColor};\n        padding: 2px;\n      }\n    }\n    tbody {\n      tr {\n        td {\n          text-align: center;\n          padding: 2px;\n          color: ${(props) => props.theme.textColor};\n        }\n      }\n    }\n  }\n`;\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface PriceProps {\n  coinId: string;\n}\n\nfunction Price({ coinId }: PriceProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcvForPrice\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading price...\"\n      ) : (\n        <PriceTable>\n          <table>\n            <thead>\n              <th>Date</th>\n              <th>High</th>\n              <th>Low</th>\n              <th>Close</th>\n            </thead>\n            <tbody>\n              {data\n                ?.slice(0)\n                .reverse()\n                .map((price) => {\n                  return (\n                    <tr>\n                      <td>{price.time_close.slice(0, 10)}</td>\n                      <td>${price.high.toFixed(2)}</td>\n                      <td>${price.low.toFixed(2)}</td>\n                      <td>${price.close.toFixed(2)}</td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </PriceTable>\n      )}\n    </div>\n  );\n}\n\n// 날짜, open, high, low, close, market cap\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.boxColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => props.theme.boxColor};\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\n\nconst BackToHome = styled.div`\n  margin-bottom: 20px;\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      <BackToHome>\n        <Link\n          to={{\n            pathname: `${process.env.PUBLIC_URL}/`,\n          }}\n        >\n          &larr; Return\n        </Link>\n      </BackToHome>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Supply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`${process.env.PUBLIC_URL}/${coinId}/chart`}>\n                Chart\n              </Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`${process.env.PUBLIC_URL}/${coinId}/price`}>\n                Price\n              </Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`${process.env.PUBLIC_URL}/:coinId/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`${process.env.PUBLIC_URL}/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.boxColor};\n  color: ${(props) => props.theme.textColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `${process.env.PUBLIC_URL}/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path={`${process.env.PUBLIC_URL}/:coinId`}>\n          <Coin />\n        </Route>\n        <Route path={`${process.env.PUBLIC_URL}/`}>\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const DarkTheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#9c88ff\",\n  boxColor: \"rgba(0,0,0,0.5)\",\n};\n\nexport const LightTheme: DefaultTheme = {\n  bgColor: \"#f5f6fa\",\n  textColor: \"#2f3640\",\n  accentColor: \"#9c88ff\",\n  boxColor: \"white\",\n};\n","import styled, { createGlobalStyle, ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { DarkTheme, LightTheme } from \"./theme\";\nimport { useState } from \"react\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\nbutton{\n  display:flex;\n  margin: 0;\n  padding: 0.5rem 1rem;\n\n  font-family: \"Noto Sans KR\", sans-serif;\n  font-size: 1rem;\n  font-weight: 400;\n  text-align: center;\n  text-decoration: none;\n\n  display: inline-block;\n  width: auto;\n\n  border: 1px;\n  border-radius: 4px;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n}\n`;\n\nconst ToggleThemeDiv = styled.div`\n  display: flex;\n  justify-content: end;\n`;\n\ninterface ToggleThemeProps {\n  toggleTheme(): void;\n}\n\nfunction ToggleTheme({ toggleTheme }: ToggleThemeProps) {\n  return (\n    <ToggleThemeDiv>\n      <button onClick={toggleTheme}>Toggle Theme</button>\n    </ToggleThemeDiv>\n  );\n}\n\nfunction App() {\n  const [theme, setTheme] = useState(\"LightTheme\");\n  const toggleTheme = () => {\n    if (theme === \"LightTheme\") {\n      setTheme(\"DarkTheme\");\n    } else {\n      setTheme(\"LightTheme\");\n    }\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={theme === \"LightTheme\" ? LightTheme : DarkTheme}>\n        <GlobalStyle />\n        <ToggleTheme toggleTheme={toggleTheme} />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}